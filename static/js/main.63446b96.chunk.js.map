{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpensiveItem","title","amount","ExpensesList","items","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","enterdYear","setEnteredYead","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","ExpenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.63446b96.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Фильтр по годам</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"ru-RU\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"ru-RU\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpensiveItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount} ₽</div>\r\n        </div>\r\n        \r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpensiveItem;\r\n","import React from \"react\";\r\nimport './ExpensesList.css'\r\nimport ExpensiveItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Нет ни одного продукта</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((item) => \r\n        <ExpensiveItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  \r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Янв\", value: 0 },\r\n    { label: \"Фев\", value: 0 },\r\n    { label: \"Март\", value: 0 },\r\n    { label: \"Апр\", value: 0 },\r\n    { label: \"Май\", value: 0 },\r\n    { label: \"Июнь\", value: 0 },\r\n    { label: \"Июль\", value: 0 },\r\n    { label: \"Авг\", value: 0 },\r\n    { label: \"Сен\", value: 0 },\r\n    { label: \"Окт\", value: 0 },\r\n    { label: \"Нбр\", value: 0 },\r\n    { label: \"Дкбр\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints ={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpenesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [enterdYear, setEnteredYead] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setEnteredYead(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enterdYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={enterdYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenesChart expenses ={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const ExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(ExpenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className=\"hidden\">\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Название</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Цена</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Дата</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2024-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Закрыть\r\n        </button>\r\n        <button type=\"sumbit\">Добавить продукт</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHendler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n\r\n    if(enteredExpenseData.title && enteredExpenseData.amount){\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Добавить новый продукт</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancel={stopEditingHandler}\r\n          onSaveExpenseData={saveExpenseDataHendler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Йогурт Teos 250г\",\r\n    amount: 76.99,\r\n    date: new Date(2022, 9, 19),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"Куриное филе 1 кг\",\r\n    amount: 259,\r\n    date: new Date(2022, 9, 18),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Видеокарта Geforce 3070\",\r\n    amount: 120000,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"Кефир пискаревский 1%\",\r\n    amount: 60,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}